
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  githubId       String?   @unique
  accessToken    String?
  createdAt      DateTime  @default(now())
  accounts       Account[]
  shares         Share[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Share{
    id String @id @default(cuid())
    userId  String
    repoOwner String
    repoName String
    maxShares Int?
    totalShares Int @default(0)
    isActive Boolean @default(true)
    isExpired Boolean @default(false)
    sharedWith String?
    expiresAt DateTime?
    createdAt DateTime @default(now())
    user User   @relation(fields: [userId], references: [id])
    ViewerSession ViewerSession[]
}

model ViewerSession {
  id        String   @id @default(cuid())
  shareId   String
  createdAt DateTime @default(now())
  expiresAt DateTime
  share     Share    @relation(fields: [shareId], references: [id], onDelete: Cascade)

  @@index([shareId, expiresAt])
}
